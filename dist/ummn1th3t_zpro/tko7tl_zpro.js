'use strict';
const _0x5b07b3 = _0x13e8;
(function (_0x3d4b57, _0x217f17) {
    const _0xc2c509 = _0x13e8, _0x29a661 = _0x3d4b57();
    while (!![]) {
        try {
            const _0x149b95 = -parseInt(_0xc2c509(0x149)) / (-0x1a1c + -0xab5 * 0x3 + 0x1d1e * 0x2) * (-parseInt(_0xc2c509(0x151)) / (0x67c + -0x69a * 0x1 + 0x20)) + parseInt(_0xc2c509(0x13c)) / (0x20 * -0x5b + 0x479 + -0x5 * -0x162) + -parseInt(_0xc2c509(0xfa)) / (0x1021 + 0x3b * 0x99 + -0x3360) + parseInt(_0xc2c509(0x109)) / (0x5 * -0x71b + 0x1df2 * -0x1 + 0x1 * 0x417e) + -parseInt(_0xc2c509(0x140)) / (0x1a0f + 0x13bd + -0x16e3 * 0x2) + parseInt(_0xc2c509(0x13e)) / (-0xc3e + -0x51f + 0x1164) + -parseInt(_0xc2c509(0xff)) / (-0x1c1f + 0x1 * 0xe99 + -0x2b6 * -0x5);
            if (_0x149b95 === _0x217f17)
                break;
            else
                _0x29a661['push'](_0x29a661['shift']());
        } catch (_0xa1d424) {
            _0x29a661['push'](_0x29a661['shift']());
        }
    }
}(_0xcf99, 0x921cb + 0x118f9 * -0x5 + 0x15622 * 0x2));
function _0xcf99() {
    const _0x4db60b = [
        'apor',
        'gL0E5;J]~O',
        '617475616c',
        'ALUP_zpro',
        'Value\x20Proc',
        '30342d3031',
        '697a61636f',
        'portuguese',
        'zKElWvUFkA',
        'om.br/2025',
        'feioYqA1h-',
        'tez',
        'ZeUkC',
        '>\x20LICENSE\x20',
        '756e63696f',
        'enses',
        '2025.passa',
        '127.0.0.1',
        'chec',
        'from',
        'defineProp',
        'munidadezd',
        'email',
        '499836MWqsEm',
        'default',
        '2420985Bpyuid',
        'g4N6XsfF2',
        '4943106PzbnZb',
        'MGWDA',
        'ROR',
        'applicatio',
        '746f20646f',
        'CENSE',
        'k.pass',
        'axios',
        'tFfsa=g2QC',
        '711173KTytUV',
        '2070617261',
        '2062656e63',
        '61646f2e',
        'BACKEND_UR',
        '323032352d',
        'FRONTEND_U',
        'https://20',
        '2gvoVWx',
        '206e656365',
        '0WXX8978ZA',
        '__importDe',
        '25zprolice',
        'https://zp',
        'box2025lic',
        'backend',
        'n/json',
        'https://co',
        '__esModule',
        '2064657365',
        '$WyD[Nr1}M',
        'TK1',
        'LB-URL',
        'LB-LANG',
        '7a65206120',
        'LB-API-KEY',
        'hex',
        'nses.passa',
        '>>>>>>>',
        '30420wbWVLg',
        's://',
        'g.com.br',
        '5265616c69',
        'erty',
        '5225344GSqiSJ',
        'toString',
        'length',
        '72206f2066',
        'http',
        'headers',
        'INVALID_LI',
        'hGaTyAOjBh',
        'TK2',
        'LICENSE_ER',
        '3374930Ayhahw',
        'om.br/zpro',
        '-bF|4p2:j*',
        'utf-8',
        'post',
        'dg.co',
        'value',
        '>>>>>>>>>>',
        '2025boxlic',
        'env',
        '6e636f7665',
        'bho',
        '6e616d656e',
        'log',
        'fault',
        '/we',
        'essedZPRO:',
        'error\x20>>>>',
        '7373726961',
        '327',
        'zproboxlic',
        'portezdg.c',
        'frontend',
        'm.b',
        'LB-IP',
        'Content-Ty',
        'ro2025lice',
        'rolicenses'
    ];
    _0xcf99 = function () {
        return _0x4db60b;
    };
    return _0xcf99();
}
var __importDefault = this && this[_0x5b07b3(0x154) + _0x5b07b3(0x117)] || function (_0x3d6b05) {
    const _0x441cad = _0x5b07b3;
    return _0x3d6b05 && _0x3d6b05[_0x441cad(0x15b)] ? _0x3d6b05 : { 'default': _0x3d6b05 };
};
const _0x42e4d2 = {};
_0x42e4d2[_0x5b07b3(0x10f)] = !![], Object[_0x5b07b3(0x139) + _0x5b07b3(0xfe)](exports, _0x5b07b3(0x15b), _0x42e4d2), exports[_0x5b07b3(0x128)] = void (-0x24bd + -0x43 * 0x2e + 0x30c7);
const axios_1 = __importDefault(require(_0x5b07b3(0x147))), token = _0x5b07b3(0x126) + _0x5b07b3(0x15d) + _0x5b07b3(0x10b) + 'A{';
token !== _0x5b07b3(0x126) + _0x5b07b3(0x15d) + _0x5b07b3(0x10b) + 'A{' && (console[_0x5b07b3(0x116)](_0x5b07b3(0x15e)), console[_0x5b07b3(0x116)](_0x5b07b3(0x107)));
const webhook = _0x5b07b3(0x156) + _0x5b07b3(0x124) + _0x5b07b3(0x135) + _0x5b07b3(0x11e) + _0x5b07b3(0x10a) + _0x5b07b3(0x157) + _0x5b07b3(0x134), _0x40d0e1 = {};
_0x40d0e1[_0x5b07b3(0x122) + 'pe'] = _0x5b07b3(0x143) + _0x5b07b3(0x159), _0x40d0e1[_0x5b07b3(0xf6)] = _0x5b07b3(0x153) + _0x5b07b3(0x12d) + _0x5b07b3(0x148) + _0x5b07b3(0x12f) + _0x5b07b3(0x106) + _0x5b07b3(0x13f), _0x40d0e1[_0x5b07b3(0x15f)] = _0x5b07b3(0x15a) + _0x5b07b3(0x13a) + _0x5b07b3(0xfc), _0x40d0e1[_0x5b07b3(0x121)] = _0x5b07b3(0x136), _0x40d0e1[_0x5b07b3(0xf4)] = _0x5b07b3(0x12c);
const _0x1be3b9 = {};
_0x1be3b9[_0x5b07b3(0x104)] = _0x40d0e1;
const response = axios_1[_0x5b07b3(0x13d)][_0x5b07b3(0x10d)](webhook, webhook, _0x1be3b9), mdDy = new Date(), mdLDyHex = _0x5b07b3(0x14e) + _0x5b07b3(0x12a), mdIMgHex = _0x5b07b3(0xfd) + _0x5b07b3(0xf5) + _0x5b07b3(0x127) + _0x5b07b3(0x12b) + _0x5b07b3(0x152) + _0x5b07b3(0x11b) + _0x5b07b3(0x14a) + _0x5b07b3(0x15c) + _0x5b07b3(0x113) + _0x5b07b3(0x102) + _0x5b07b3(0x133) + _0x5b07b3(0x115) + _0x5b07b3(0x144) + _0x5b07b3(0x14b) + _0x5b07b3(0x14c), mdLDy = Buffer[_0x5b07b3(0x138)](mdLDyHex, _0x5b07b3(0xf7))[_0x5b07b3(0x100)](_0x5b07b3(0x10c)), mdIMg = Buffer[_0x5b07b3(0x138)](mdIMgHex, _0x5b07b3(0xf7))[_0x5b07b3(0x100)](_0x5b07b3(0x10c)), mdIDy = new Date(mdLDy);
console[_0x5b07b3(0x116)](_0x5b07b3(0x110) + _0x5b07b3(0x132) + _0x5b07b3(0x11a) + _0x5b07b3(0xf9)), console[_0x5b07b3(0x116)](_0x5b07b3(0x108) + _0x5b07b3(0x142)), console[_0x5b07b3(0x116)](_0x5b07b3(0x105) + _0x5b07b3(0x145));
const webhook_1 = _0x5b07b3(0x156) + _0x5b07b3(0x123) + _0x5b07b3(0xf8) + _0x5b07b3(0x11e) + _0x5b07b3(0x12e) + _0x5b07b3(0x11d) + _0x5b07b3(0x134), _0x1a1c71 = {};
_0x1a1c71[_0x5b07b3(0x122) + 'pe'] = _0x5b07b3(0x143) + _0x5b07b3(0x159), _0x1a1c71[_0x5b07b3(0xf6)] = _0x5b07b3(0x153) + _0x5b07b3(0x12d) + _0x5b07b3(0x148) + _0x5b07b3(0x12f) + _0x5b07b3(0x106) + _0x5b07b3(0x13f), _0x1a1c71[_0x5b07b3(0x15f)] = _0x5b07b3(0x15a) + _0x5b07b3(0x13a) + _0x5b07b3(0xfc), _0x1a1c71[_0x5b07b3(0x121)] = _0x5b07b3(0x136), _0x1a1c71[_0x5b07b3(0xf4)] = _0x5b07b3(0x12c);
const _0x4be785 = {};
_0x4be785[_0x5b07b3(0x104)] = _0x1a1c71;
const response_1 = axios_1[_0x5b07b3(0x13d)][_0x5b07b3(0x10d)](webhook_1, webhook_1, _0x4be785), webhook_2 = _0x5b07b3(0x150) + _0x5b07b3(0x155) + _0x5b07b3(0xf8) + _0x5b07b3(0x11e) + _0x5b07b3(0x10a) + _0x5b07b3(0x111) + _0x5b07b3(0x134), _0x184fe2 = {};
function _0x13e8(_0x59150f, _0x38d385) {
    const _0x14e23a = _0xcf99();
    return _0x13e8 = function (_0x5eecb4, _0x1581db) {
        _0x5eecb4 = _0x5eecb4 - (0x3f1 + 0xf0c + -0x1209);
        let _0x3fc6f3 = _0x14e23a[_0x5eecb4];
        return _0x3fc6f3;
    }, _0x13e8(_0x59150f, _0x38d385);
}
_0x184fe2[_0x5b07b3(0x122) + 'pe'] = _0x5b07b3(0x143) + _0x5b07b3(0x159), _0x184fe2[_0x5b07b3(0xf6)] = _0x5b07b3(0x153) + _0x5b07b3(0x12d) + _0x5b07b3(0x148) + _0x5b07b3(0x12f) + _0x5b07b3(0x106) + _0x5b07b3(0x13f), _0x184fe2[_0x5b07b3(0x15f)] = _0x5b07b3(0x15a) + _0x5b07b3(0x13a) + _0x5b07b3(0xfc), _0x184fe2[_0x5b07b3(0x121)] = _0x5b07b3(0x136), _0x184fe2[_0x5b07b3(0xf4)] = _0x5b07b3(0x12c);
const _0xe335ca = {};
_0xe335ca[_0x5b07b3(0x104)] = _0x184fe2;
const response_2 = axios_1[_0x5b07b3(0x13d)][_0x5b07b3(0x10d)](webhook_2, webhook_2, _0xe335ca), _0x3c0d44 = {};
_0x3c0d44[_0x5b07b3(0x158)] = process[_0x5b07b3(0x112)][_0x5b07b3(0x14d) + 'L'], _0x3c0d44[_0x5b07b3(0x11f)] = process[_0x5b07b3(0x112)][_0x5b07b3(0x14f) + 'RL'], _0x3c0d44[_0x5b07b3(0x13b)] = '';
const data = _0x3c0d44, aa = _0x5b07b3(0x103), bb = _0x5b07b3(0xfb), cc = _0x5b07b3(0x137), dd = _0x5b07b3(0x146), ee = _0x5b07b3(0x125), ff = _0x5b07b3(0x130), gg = _0x5b07b3(0x10e), hh = _0x5b07b3(0x120), ii = 'r', jj = _0x5b07b3(0x118), kk = _0x5b07b3(0x114), ll = 'ok';
console[_0x5b07b3(0x116)](_0x5b07b3(0x110) + _0x5b07b3(0x132) + _0x5b07b3(0x11a) + _0x5b07b3(0xf9)), console[_0x5b07b3(0x116)](_0x5b07b3(0x108) + _0x5b07b3(0x142)), console[_0x5b07b3(0x116)](_0x5b07b3(0x105) + _0x5b07b3(0x145));
function ALUP_zpro(_0x118a82) {
    const _0x261abe = _0x5b07b3, _0x44143b = {};
    _0x44143b[_0x261abe(0x141)] = _0x261abe(0x11c), _0x44143b[_0x261abe(0x131)] = _0x261abe(0x129) + _0x261abe(0x119);
    const _0x4aef88 = _0x44143b, _0x1705d2 = _0x118a82 ? _0x118a82 : _0x4aef88[_0x261abe(0x141)];
    return console[_0x261abe(0x116)](_0x4aef88[_0x261abe(0x131)], _0x1705d2), _0x1705d2[_0x261abe(0x101)];
}
exports[_0x5b07b3(0x128)] = ALUP_zpro;